// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ctp.proto

#include "ctp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ctp {
class TDF_FUTURE_DATADefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TDF_FUTURE_DATA>
      _instance;
} _TDF_FUTURE_DATA_default_instance_;
}  // namespace ctp
namespace protobuf_ctp_2eproto {
static void InitDefaultsTDF_FUTURE_DATA() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ctp::_TDF_FUTURE_DATA_default_instance_;
    new (ptr) ::ctp::TDF_FUTURE_DATA();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ctp::TDF_FUTURE_DATA::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TDF_FUTURE_DATA =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTDF_FUTURE_DATA}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TDF_FUTURE_DATA.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, szwindcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nauctionprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nauctionqty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, szcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nactionday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, ntradingday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, ntime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, ipreopeninterest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, npreclose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, npresettleprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nopen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nhigh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nlow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nmatch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, ivolume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, iturnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, iopeninterest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nclose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nsettleprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nhighlimited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nlowlimited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, npredelta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, ncurrdelta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, naskprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, naskvol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nbidprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, nbidvol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ctp::TDF_FUTURE_DATA, navgprice_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ctp::TDF_FUTURE_DATA)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ctp::_TDF_FUTURE_DATA_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ctp.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tctp.proto\022\003ctp\"\272\004\n\017TDF_FUTURE_DATA\022\022\n\n"
      "szwindcode\030\001 \001(\t\022\025\n\rnauctionprice\030\033 \001(\005\022"
      "\023\n\013nauctionqty\030\034 \001(\005\022\017\n\007nstatus\030\006 \001(\005\022\016\n"
      "\006szcode\030\002 \001(\t\022\022\n\nnactionday\030\003 \001(\t\022\023\n\013ntr"
      "adingday\030\004 \001(\t\022\r\n\005ntime\030\005 \001(\005\022\030\n\020ipreope"
      "ninterest\030\007 \001(\001\022\021\n\tnpreclose\030\010 \001(\001\022\027\n\017np"
      "resettleprice\030\t \001(\001\022\r\n\005nopen\030\n \001(\001\022\r\n\005nh"
      "igh\030\013 \001(\001\022\014\n\004nlow\030\014 \001(\001\022\016\n\006nmatch\030\r \001(\001\022"
      "\017\n\007ivolume\030\016 \001(\005\022\021\n\titurnover\030\017 \001(\001\022\025\n\ri"
      "openinterest\030\020 \001(\001\022\016\n\006nclose\030\021 \001(\001\022\024\n\014ns"
      "ettleprice\030\022 \001(\001\022\024\n\014nhighlimited\030\023 \001(\001\022\023"
      "\n\013nlowlimited\030\024 \001(\001\022\021\n\tnpredelta\030\025 \001(\001\022\022"
      "\n\nncurrdelta\030\026 \001(\001\022\021\n\tnaskprice\030\027 \003(\001\022\017\n"
      "\007naskvol\030\030 \003(\005\022\021\n\tnbidprice\030\031 \003(\001\022\017\n\007nbi"
      "dvol\030\032 \003(\005\022\021\n\tnavgprice\030\035 \001(\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 597);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ctp.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ctp_2eproto
namespace ctp {

// ===================================================================

void TDF_FUTURE_DATA::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TDF_FUTURE_DATA::kSzwindcodeFieldNumber;
const int TDF_FUTURE_DATA::kNauctionpriceFieldNumber;
const int TDF_FUTURE_DATA::kNauctionqtyFieldNumber;
const int TDF_FUTURE_DATA::kNstatusFieldNumber;
const int TDF_FUTURE_DATA::kSzcodeFieldNumber;
const int TDF_FUTURE_DATA::kNactiondayFieldNumber;
const int TDF_FUTURE_DATA::kNtradingdayFieldNumber;
const int TDF_FUTURE_DATA::kNtimeFieldNumber;
const int TDF_FUTURE_DATA::kIpreopeninterestFieldNumber;
const int TDF_FUTURE_DATA::kNprecloseFieldNumber;
const int TDF_FUTURE_DATA::kNpresettlepriceFieldNumber;
const int TDF_FUTURE_DATA::kNopenFieldNumber;
const int TDF_FUTURE_DATA::kNhighFieldNumber;
const int TDF_FUTURE_DATA::kNlowFieldNumber;
const int TDF_FUTURE_DATA::kNmatchFieldNumber;
const int TDF_FUTURE_DATA::kIvolumeFieldNumber;
const int TDF_FUTURE_DATA::kIturnoverFieldNumber;
const int TDF_FUTURE_DATA::kIopeninterestFieldNumber;
const int TDF_FUTURE_DATA::kNcloseFieldNumber;
const int TDF_FUTURE_DATA::kNsettlepriceFieldNumber;
const int TDF_FUTURE_DATA::kNhighlimitedFieldNumber;
const int TDF_FUTURE_DATA::kNlowlimitedFieldNumber;
const int TDF_FUTURE_DATA::kNpredeltaFieldNumber;
const int TDF_FUTURE_DATA::kNcurrdeltaFieldNumber;
const int TDF_FUTURE_DATA::kNaskpriceFieldNumber;
const int TDF_FUTURE_DATA::kNaskvolFieldNumber;
const int TDF_FUTURE_DATA::kNbidpriceFieldNumber;
const int TDF_FUTURE_DATA::kNbidvolFieldNumber;
const int TDF_FUTURE_DATA::kNavgpriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TDF_FUTURE_DATA::TDF_FUTURE_DATA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ctp_2eproto::scc_info_TDF_FUTURE_DATA.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ctp.TDF_FUTURE_DATA)
}
TDF_FUTURE_DATA::TDF_FUTURE_DATA(const TDF_FUTURE_DATA& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      naskprice_(from.naskprice_),
      naskvol_(from.naskvol_),
      nbidprice_(from.nbidprice_),
      nbidvol_(from.nbidvol_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szwindcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szwindcode().size() > 0) {
    szwindcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szwindcode_);
  }
  szcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szcode().size() > 0) {
    szcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szcode_);
  }
  nactionday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nactionday().size() > 0) {
    nactionday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nactionday_);
  }
  ntradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ntradingday().size() > 0) {
    ntradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ntradingday_);
  }
  ::memcpy(&ntime_, &from.ntime_,
    static_cast<size_t>(reinterpret_cast<char*>(&nauctionqty_) -
    reinterpret_cast<char*>(&ntime_)) + sizeof(nauctionqty_));
  // @@protoc_insertion_point(copy_constructor:ctp.TDF_FUTURE_DATA)
}

void TDF_FUTURE_DATA::SharedCtor() {
  szwindcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nactionday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ntime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nauctionqty_) -
      reinterpret_cast<char*>(&ntime_)) + sizeof(nauctionqty_));
}

TDF_FUTURE_DATA::~TDF_FUTURE_DATA() {
  // @@protoc_insertion_point(destructor:ctp.TDF_FUTURE_DATA)
  SharedDtor();
}

void TDF_FUTURE_DATA::SharedDtor() {
  szwindcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nactionday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntradingday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TDF_FUTURE_DATA::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TDF_FUTURE_DATA::descriptor() {
  ::protobuf_ctp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ctp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TDF_FUTURE_DATA& TDF_FUTURE_DATA::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ctp_2eproto::scc_info_TDF_FUTURE_DATA.base);
  return *internal_default_instance();
}


void TDF_FUTURE_DATA::Clear() {
// @@protoc_insertion_point(message_clear_start:ctp.TDF_FUTURE_DATA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  naskprice_.Clear();
  naskvol_.Clear();
  nbidprice_.Clear();
  nbidvol_.Clear();
  szwindcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nactionday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntradingday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ntime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nauctionqty_) -
      reinterpret_cast<char*>(&ntime_)) + sizeof(nauctionqty_));
  _internal_metadata_.Clear();
}

bool TDF_FUTURE_DATA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ctp.TDF_FUTURE_DATA)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string szwindcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szwindcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szwindcode().data(), static_cast<int>(this->szwindcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ctp.TDF_FUTURE_DATA.szwindcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szcode().data(), static_cast<int>(this->szcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ctp.TDF_FUTURE_DATA.szcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nactionday = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nactionday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nactionday().data(), static_cast<int>(this->nactionday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ctp.TDF_FUTURE_DATA.nactionday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ntradingday = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ntradingday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ntradingday().data(), static_cast<int>(this->ntradingday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ctp.TDF_FUTURE_DATA.ntradingday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ntime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ntime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nstatus = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ipreopeninterest = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ipreopeninterest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double npreclose = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &npreclose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double npresettleprice = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &npresettleprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double nopen = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nopen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double nhigh = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nhigh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double nlow = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nlow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double nmatch = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nmatch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ivolume = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ivolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double iturnover = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &iturnover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double iopeninterest = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &iopeninterest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double nclose = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nclose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double nsettleprice = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nsettleprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double nhighlimited = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nhighlimited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double nlowlimited = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nlowlimited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double npredelta = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &npredelta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ncurrdelta = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u /* 177 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ncurrdelta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double naskprice = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_naskprice())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 186u, input, this->mutable_naskprice())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 naskvol = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_naskvol())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 194u, input, this->mutable_naskvol())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double nbidprice = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_nbidprice())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 202u, input, this->mutable_nbidprice())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 nbidvol = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_nbidvol())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 210u, input, this->mutable_nbidvol())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nauctionprice = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nauctionprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nauctionqty = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nauctionqty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double navgprice = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(233u /* 233 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &navgprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ctp.TDF_FUTURE_DATA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ctp.TDF_FUTURE_DATA)
  return false;
#undef DO_
}

void TDF_FUTURE_DATA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ctp.TDF_FUTURE_DATA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string szwindcode = 1;
  if (this->szwindcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szwindcode().data(), static_cast<int>(this->szwindcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ctp.TDF_FUTURE_DATA.szwindcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->szwindcode(), output);
  }

  // string szcode = 2;
  if (this->szcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szcode().data(), static_cast<int>(this->szcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ctp.TDF_FUTURE_DATA.szcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->szcode(), output);
  }

  // string nactionday = 3;
  if (this->nactionday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nactionday().data(), static_cast<int>(this->nactionday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ctp.TDF_FUTURE_DATA.nactionday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nactionday(), output);
  }

  // string ntradingday = 4;
  if (this->ntradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ntradingday().data(), static_cast<int>(this->ntradingday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ctp.TDF_FUTURE_DATA.ntradingday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ntradingday(), output);
  }

  // int32 ntime = 5;
  if (this->ntime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ntime(), output);
  }

  // int32 nstatus = 6;
  if (this->nstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->nstatus(), output);
  }

  // double ipreopeninterest = 7;
  if (this->ipreopeninterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->ipreopeninterest(), output);
  }

  // double npreclose = 8;
  if (this->npreclose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->npreclose(), output);
  }

  // double npresettleprice = 9;
  if (this->npresettleprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->npresettleprice(), output);
  }

  // double nopen = 10;
  if (this->nopen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->nopen(), output);
  }

  // double nhigh = 11;
  if (this->nhigh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->nhigh(), output);
  }

  // double nlow = 12;
  if (this->nlow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->nlow(), output);
  }

  // double nmatch = 13;
  if (this->nmatch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->nmatch(), output);
  }

  // int32 ivolume = 14;
  if (this->ivolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->ivolume(), output);
  }

  // double iturnover = 15;
  if (this->iturnover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->iturnover(), output);
  }

  // double iopeninterest = 16;
  if (this->iopeninterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->iopeninterest(), output);
  }

  // double nclose = 17;
  if (this->nclose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->nclose(), output);
  }

  // double nsettleprice = 18;
  if (this->nsettleprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->nsettleprice(), output);
  }

  // double nhighlimited = 19;
  if (this->nhighlimited() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->nhighlimited(), output);
  }

  // double nlowlimited = 20;
  if (this->nlowlimited() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->nlowlimited(), output);
  }

  // double npredelta = 21;
  if (this->npredelta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->npredelta(), output);
  }

  // double ncurrdelta = 22;
  if (this->ncurrdelta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->ncurrdelta(), output);
  }

  // repeated double naskprice = 23;
  if (this->naskprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(23, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _naskprice_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->naskprice().data(), this->naskprice_size(), output);
  }

  // repeated int32 naskvol = 24;
  if (this->naskvol_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(24, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _naskvol_cached_byte_size_));
  }
  for (int i = 0, n = this->naskvol_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->naskvol(i), output);
  }

  // repeated double nbidprice = 25;
  if (this->nbidprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(25, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nbidprice_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->nbidprice().data(), this->nbidprice_size(), output);
  }

  // repeated int32 nbidvol = 26;
  if (this->nbidvol_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(26, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nbidvol_cached_byte_size_));
  }
  for (int i = 0, n = this->nbidvol_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->nbidvol(i), output);
  }

  // int32 nauctionprice = 27;
  if (this->nauctionprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->nauctionprice(), output);
  }

  // int32 nauctionqty = 28;
  if (this->nauctionqty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->nauctionqty(), output);
  }

  // double navgprice = 29;
  if (this->navgprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(29, this->navgprice(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ctp.TDF_FUTURE_DATA)
}

::google::protobuf::uint8* TDF_FUTURE_DATA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ctp.TDF_FUTURE_DATA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string szwindcode = 1;
  if (this->szwindcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szwindcode().data(), static_cast<int>(this->szwindcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ctp.TDF_FUTURE_DATA.szwindcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->szwindcode(), target);
  }

  // string szcode = 2;
  if (this->szcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szcode().data(), static_cast<int>(this->szcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ctp.TDF_FUTURE_DATA.szcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->szcode(), target);
  }

  // string nactionday = 3;
  if (this->nactionday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nactionday().data(), static_cast<int>(this->nactionday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ctp.TDF_FUTURE_DATA.nactionday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nactionday(), target);
  }

  // string ntradingday = 4;
  if (this->ntradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ntradingday().data(), static_cast<int>(this->ntradingday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ctp.TDF_FUTURE_DATA.ntradingday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ntradingday(), target);
  }

  // int32 ntime = 5;
  if (this->ntime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ntime(), target);
  }

  // int32 nstatus = 6;
  if (this->nstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->nstatus(), target);
  }

  // double ipreopeninterest = 7;
  if (this->ipreopeninterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->ipreopeninterest(), target);
  }

  // double npreclose = 8;
  if (this->npreclose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->npreclose(), target);
  }

  // double npresettleprice = 9;
  if (this->npresettleprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->npresettleprice(), target);
  }

  // double nopen = 10;
  if (this->nopen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->nopen(), target);
  }

  // double nhigh = 11;
  if (this->nhigh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->nhigh(), target);
  }

  // double nlow = 12;
  if (this->nlow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->nlow(), target);
  }

  // double nmatch = 13;
  if (this->nmatch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->nmatch(), target);
  }

  // int32 ivolume = 14;
  if (this->ivolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->ivolume(), target);
  }

  // double iturnover = 15;
  if (this->iturnover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->iturnover(), target);
  }

  // double iopeninterest = 16;
  if (this->iopeninterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->iopeninterest(), target);
  }

  // double nclose = 17;
  if (this->nclose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->nclose(), target);
  }

  // double nsettleprice = 18;
  if (this->nsettleprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->nsettleprice(), target);
  }

  // double nhighlimited = 19;
  if (this->nhighlimited() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->nhighlimited(), target);
  }

  // double nlowlimited = 20;
  if (this->nlowlimited() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->nlowlimited(), target);
  }

  // double npredelta = 21;
  if (this->npredelta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->npredelta(), target);
  }

  // double ncurrdelta = 22;
  if (this->ncurrdelta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->ncurrdelta(), target);
  }

  // repeated double naskprice = 23;
  if (this->naskprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      23,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _naskprice_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->naskprice_, target);
  }

  // repeated int32 naskvol = 24;
  if (this->naskvol_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      24,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _naskvol_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->naskvol_, target);
  }

  // repeated double nbidprice = 25;
  if (this->nbidprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      25,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _nbidprice_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->nbidprice_, target);
  }

  // repeated int32 nbidvol = 26;
  if (this->nbidvol_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      26,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _nbidvol_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->nbidvol_, target);
  }

  // int32 nauctionprice = 27;
  if (this->nauctionprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->nauctionprice(), target);
  }

  // int32 nauctionqty = 28;
  if (this->nauctionqty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->nauctionqty(), target);
  }

  // double navgprice = 29;
  if (this->navgprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(29, this->navgprice(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ctp.TDF_FUTURE_DATA)
  return target;
}

size_t TDF_FUTURE_DATA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ctp.TDF_FUTURE_DATA)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double naskprice = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->naskprice_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _naskprice_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 naskvol = 24;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->naskvol_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _naskvol_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double nbidprice = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->nbidprice_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nbidprice_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 nbidvol = 26;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->nbidvol_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nbidvol_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string szwindcode = 1;
  if (this->szwindcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szwindcode());
  }

  // string szcode = 2;
  if (this->szcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szcode());
  }

  // string nactionday = 3;
  if (this->nactionday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nactionday());
  }

  // string ntradingday = 4;
  if (this->ntradingday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ntradingday());
  }

  // int32 ntime = 5;
  if (this->ntime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ntime());
  }

  // int32 nstatus = 6;
  if (this->nstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nstatus());
  }

  // double ipreopeninterest = 7;
  if (this->ipreopeninterest() != 0) {
    total_size += 1 + 8;
  }

  // double npreclose = 8;
  if (this->npreclose() != 0) {
    total_size += 1 + 8;
  }

  // double npresettleprice = 9;
  if (this->npresettleprice() != 0) {
    total_size += 1 + 8;
  }

  // double nopen = 10;
  if (this->nopen() != 0) {
    total_size += 1 + 8;
  }

  // double nhigh = 11;
  if (this->nhigh() != 0) {
    total_size += 1 + 8;
  }

  // double nlow = 12;
  if (this->nlow() != 0) {
    total_size += 1 + 8;
  }

  // double nmatch = 13;
  if (this->nmatch() != 0) {
    total_size += 1 + 8;
  }

  // double iturnover = 15;
  if (this->iturnover() != 0) {
    total_size += 1 + 8;
  }

  // double iopeninterest = 16;
  if (this->iopeninterest() != 0) {
    total_size += 2 + 8;
  }

  // double nclose = 17;
  if (this->nclose() != 0) {
    total_size += 2 + 8;
  }

  // double nsettleprice = 18;
  if (this->nsettleprice() != 0) {
    total_size += 2 + 8;
  }

  // double nhighlimited = 19;
  if (this->nhighlimited() != 0) {
    total_size += 2 + 8;
  }

  // double nlowlimited = 20;
  if (this->nlowlimited() != 0) {
    total_size += 2 + 8;
  }

  // int32 ivolume = 14;
  if (this->ivolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ivolume());
  }

  // int32 nauctionprice = 27;
  if (this->nauctionprice() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nauctionprice());
  }

  // double npredelta = 21;
  if (this->npredelta() != 0) {
    total_size += 2 + 8;
  }

  // double ncurrdelta = 22;
  if (this->ncurrdelta() != 0) {
    total_size += 2 + 8;
  }

  // double navgprice = 29;
  if (this->navgprice() != 0) {
    total_size += 2 + 8;
  }

  // int32 nauctionqty = 28;
  if (this->nauctionqty() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nauctionqty());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TDF_FUTURE_DATA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ctp.TDF_FUTURE_DATA)
  GOOGLE_DCHECK_NE(&from, this);
  const TDF_FUTURE_DATA* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TDF_FUTURE_DATA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ctp.TDF_FUTURE_DATA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ctp.TDF_FUTURE_DATA)
    MergeFrom(*source);
  }
}

void TDF_FUTURE_DATA::MergeFrom(const TDF_FUTURE_DATA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ctp.TDF_FUTURE_DATA)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  naskprice_.MergeFrom(from.naskprice_);
  naskvol_.MergeFrom(from.naskvol_);
  nbidprice_.MergeFrom(from.nbidprice_);
  nbidvol_.MergeFrom(from.nbidvol_);
  if (from.szwindcode().size() > 0) {

    szwindcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szwindcode_);
  }
  if (from.szcode().size() > 0) {

    szcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szcode_);
  }
  if (from.nactionday().size() > 0) {

    nactionday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nactionday_);
  }
  if (from.ntradingday().size() > 0) {

    ntradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ntradingday_);
  }
  if (from.ntime() != 0) {
    set_ntime(from.ntime());
  }
  if (from.nstatus() != 0) {
    set_nstatus(from.nstatus());
  }
  if (from.ipreopeninterest() != 0) {
    set_ipreopeninterest(from.ipreopeninterest());
  }
  if (from.npreclose() != 0) {
    set_npreclose(from.npreclose());
  }
  if (from.npresettleprice() != 0) {
    set_npresettleprice(from.npresettleprice());
  }
  if (from.nopen() != 0) {
    set_nopen(from.nopen());
  }
  if (from.nhigh() != 0) {
    set_nhigh(from.nhigh());
  }
  if (from.nlow() != 0) {
    set_nlow(from.nlow());
  }
  if (from.nmatch() != 0) {
    set_nmatch(from.nmatch());
  }
  if (from.iturnover() != 0) {
    set_iturnover(from.iturnover());
  }
  if (from.iopeninterest() != 0) {
    set_iopeninterest(from.iopeninterest());
  }
  if (from.nclose() != 0) {
    set_nclose(from.nclose());
  }
  if (from.nsettleprice() != 0) {
    set_nsettleprice(from.nsettleprice());
  }
  if (from.nhighlimited() != 0) {
    set_nhighlimited(from.nhighlimited());
  }
  if (from.nlowlimited() != 0) {
    set_nlowlimited(from.nlowlimited());
  }
  if (from.ivolume() != 0) {
    set_ivolume(from.ivolume());
  }
  if (from.nauctionprice() != 0) {
    set_nauctionprice(from.nauctionprice());
  }
  if (from.npredelta() != 0) {
    set_npredelta(from.npredelta());
  }
  if (from.ncurrdelta() != 0) {
    set_ncurrdelta(from.ncurrdelta());
  }
  if (from.navgprice() != 0) {
    set_navgprice(from.navgprice());
  }
  if (from.nauctionqty() != 0) {
    set_nauctionqty(from.nauctionqty());
  }
}

void TDF_FUTURE_DATA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ctp.TDF_FUTURE_DATA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TDF_FUTURE_DATA::CopyFrom(const TDF_FUTURE_DATA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ctp.TDF_FUTURE_DATA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDF_FUTURE_DATA::IsInitialized() const {
  return true;
}

void TDF_FUTURE_DATA::Swap(TDF_FUTURE_DATA* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TDF_FUTURE_DATA::InternalSwap(TDF_FUTURE_DATA* other) {
  using std::swap;
  naskprice_.InternalSwap(&other->naskprice_);
  naskvol_.InternalSwap(&other->naskvol_);
  nbidprice_.InternalSwap(&other->nbidprice_);
  nbidvol_.InternalSwap(&other->nbidvol_);
  szwindcode_.Swap(&other->szwindcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  szcode_.Swap(&other->szcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nactionday_.Swap(&other->nactionday_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ntradingday_.Swap(&other->ntradingday_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ntime_, other->ntime_);
  swap(nstatus_, other->nstatus_);
  swap(ipreopeninterest_, other->ipreopeninterest_);
  swap(npreclose_, other->npreclose_);
  swap(npresettleprice_, other->npresettleprice_);
  swap(nopen_, other->nopen_);
  swap(nhigh_, other->nhigh_);
  swap(nlow_, other->nlow_);
  swap(nmatch_, other->nmatch_);
  swap(iturnover_, other->iturnover_);
  swap(iopeninterest_, other->iopeninterest_);
  swap(nclose_, other->nclose_);
  swap(nsettleprice_, other->nsettleprice_);
  swap(nhighlimited_, other->nhighlimited_);
  swap(nlowlimited_, other->nlowlimited_);
  swap(ivolume_, other->ivolume_);
  swap(nauctionprice_, other->nauctionprice_);
  swap(npredelta_, other->npredelta_);
  swap(ncurrdelta_, other->ncurrdelta_);
  swap(navgprice_, other->navgprice_);
  swap(nauctionqty_, other->nauctionqty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TDF_FUTURE_DATA::GetMetadata() const {
  protobuf_ctp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ctp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ctp
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ctp::TDF_FUTURE_DATA* Arena::CreateMaybeMessage< ::ctp::TDF_FUTURE_DATA >(Arena* arena) {
  return Arena::CreateInternal< ::ctp::TDF_FUTURE_DATA >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
