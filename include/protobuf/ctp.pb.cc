// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ctp.proto

#include "ctp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace guosen {
class ProtoMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoMsg>
      _instance;
} _ProtoMsg_default_instance_;
class CtpRtnConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpRtnConnect>
      _instance;
} _CtpRtnConnect_default_instance_;
class CtpRspLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpRspLogin>
      _instance;
} _CtpRspLogin_default_instance_;
class CtpRtnTickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CtpRtnTick>
      _instance;
} _CtpRtnTick_default_instance_;
}  // namespace guosen
namespace protobuf_ctp_2eproto {
static void InitDefaultsProtoMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::guosen::_ProtoMsg_default_instance_;
    new (ptr) ::guosen::ProtoMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::guosen::ProtoMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtoMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtoMsg}, {}};

static void InitDefaultsCtpRtnConnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::guosen::_CtpRtnConnect_default_instance_;
    new (ptr) ::guosen::CtpRtnConnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::guosen::CtpRtnConnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpRtnConnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpRtnConnect}, {}};

static void InitDefaultsCtpRspLogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::guosen::_CtpRspLogin_default_instance_;
    new (ptr) ::guosen::CtpRspLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::guosen::CtpRspLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpRspLogin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpRspLogin}, {}};

static void InitDefaultsCtpRtnTick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::guosen::_CtpRtnTick_default_instance_;
    new (ptr) ::guosen::CtpRtnTick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::guosen::CtpRtnTick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CtpRtnTick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtpRtnTick}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpRtnConnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpRspLogin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CtpRtnTick.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::ProtoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::ProtoMsg, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::ProtoMsg, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnConnect, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnConnect, nreason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, tradingday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, logintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, brokerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, systemname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, frontid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, maxorderref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, shfetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, dcetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, czcetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, ffextime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRspLogin, inetime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, tradingday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, instrumentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, exchangeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, exchangeinstid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, lastprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, presettlementprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, precloseprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, preopeninterest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, openprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, highestprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, lowestprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, openinterest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, closeprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, settlementprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, upperlimitprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, lowerlimitprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, predelta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, currdelta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, updatemillisec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, bidprice1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, bidvolume1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, askprice1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, askvolume1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, bidprice2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, bidvolume2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, askprice2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, askvolume2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, bidprice3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, bidvolume3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, askprice3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, askvolume3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, bidprice4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, bidvolume4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, askprice4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, askvolume4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, bidprice5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, bidvolume5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, askprice5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, askvolume5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, averageprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::guosen::CtpRtnTick, actionday_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::guosen::ProtoMsg)},
  { 7, -1, sizeof(::guosen::CtpRtnConnect)},
  { 14, -1, sizeof(::guosen::CtpRspLogin)},
  { 32, -1, sizeof(::guosen::CtpRtnTick)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::guosen::_ProtoMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::guosen::_CtpRtnConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::guosen::_CtpRspLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::guosen::_CtpRtnTick_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ctp.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tctp.proto\022\006guosen\"7\n\010ProtoMsg\022\035\n\004head\030"
      "\001 \001(\0162\017.guosen.MsgType\022\014\n\004body\030\002 \001(\014\"0\n\r"
      "CtpRtnConnect\022\016\n\006status\030\001 \001(\010\022\017\n\007nreason"
      "\030\002 \001(\005\"\373\001\n\013CtpRspLogin\022\022\n\ntradingday\030\001 \001"
      "(\t\022\021\n\tlogintime\030\002 \001(\t\022\020\n\010brokerid\030\003 \001(\t\022"
      "\016\n\006userid\030\004 \001(\t\022\022\n\nsystemname\030\005 \001(\t\022\017\n\007f"
      "rontid\030\006 \001(\005\022\021\n\tsessionid\030\007 \001(\005\022\023\n\013maxor"
      "derref\030\010 \001(\t\022\020\n\010shfetime\030\t \001(\t\022\017\n\007dcetim"
      "e\030\n \001(\t\022\020\n\010czcetime\030\013 \001(\t\022\020\n\010ffextime\030\014 "
      "\001(\t\022\017\n\007inetime\030\r \001(\t\"\226\007\n\nCtpRtnTick\022\022\n\nt"
      "radingday\030\001 \001(\t\022\024\n\014instrumentid\030\002 \001(\t\022\022\n"
      "\nexchangeid\030\003 \001(\t\022\026\n\016exchangeinstid\030\004 \001("
      "\t\022\021\n\tlastprice\030\005 \001(\001\022\032\n\022presettlementpri"
      "ce\030\006 \001(\001\022\025\n\rprecloseprice\030\007 \001(\001\022\027\n\017preop"
      "eninterest\030\010 \001(\001\022\021\n\topenprice\030\t \001(\001\022\024\n\014h"
      "ighestprice\030\n \001(\001\022\023\n\013lowestprice\030\013 \001(\001\022\016"
      "\n\006volume\030\014 \001(\005\022\020\n\010turnover\030\r \001(\001\022\024\n\014open"
      "interest\030\016 \001(\001\022\022\n\ncloseprice\030\017 \001(\001\022\027\n\017se"
      "ttlementprice\030\020 \001(\001\022\027\n\017upperlimitprice\030\021"
      " \001(\001\022\027\n\017lowerlimitprice\030\022 \001(\001\022\020\n\010predelt"
      "a\030\023 \001(\001\022\021\n\tcurrdelta\030\024 \001(\001\022\022\n\nupdatetime"
      "\030\025 \001(\t\022\026\n\016updatemillisec\030\026 \001(\005\022\021\n\tbidpri"
      "ce1\030\027 \001(\001\022\022\n\nbidvolume1\030\030 \001(\005\022\021\n\taskpric"
      "e1\030\031 \001(\001\022\022\n\naskvolume1\030\032 \001(\005\022\021\n\tbidprice"
      "2\030\033 \001(\001\022\022\n\nbidvolume2\030\034 \001(\005\022\021\n\taskprice2"
      "\030\035 \001(\001\022\022\n\naskvolume2\030\036 \001(\005\022\021\n\tbidprice3\030"
      "\037 \001(\001\022\022\n\nbidvolume3\030  \001(\005\022\021\n\taskprice3\030!"
      " \001(\001\022\022\n\naskvolume3\030\" \001(\005\022\021\n\tbidprice4\030# "
      "\001(\001\022\022\n\nbidvolume4\030$ \001(\005\022\021\n\taskprice4\030% \001"
      "(\001\022\022\n\naskvolume4\030& \001(\005\022\021\n\tbidprice5\030\' \001("
      "\001\022\022\n\nbidvolume5\030( \001(\005\022\021\n\taskprice5\030) \001(\001"
      "\022\022\n\naskvolume5\030* \001(\005\022\024\n\014averageprice\030+ \001"
      "(\001\022\021\n\tactionday\030, \001(\t*C\n\007MsgType\022\023\n\017CTP_"
      "RTN_CONNECT\020\000\022\021\n\rCTP_RSP_LOGIN\020\001\022\020\n\014CTP_"
      "RTN_TICK\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1378);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ctp.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ctp_2eproto
namespace guosen {
const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_ctp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ctp_2eproto::file_level_enum_descriptors[0];
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ProtoMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoMsg::kHeadFieldNumber;
const int ProtoMsg::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoMsg::ProtoMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ctp_2eproto::scc_info_ProtoMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:guosen.ProtoMsg)
}
ProtoMsg::ProtoMsg(const ProtoMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  head_ = from.head_;
  // @@protoc_insertion_point(copy_constructor:guosen.ProtoMsg)
}

void ProtoMsg::SharedCtor() {
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_ = 0;
}

ProtoMsg::~ProtoMsg() {
  // @@protoc_insertion_point(destructor:guosen.ProtoMsg)
  SharedDtor();
}

void ProtoMsg::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProtoMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoMsg::descriptor() {
  ::protobuf_ctp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ctp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoMsg& ProtoMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ctp_2eproto::scc_info_ProtoMsg.base);
  return *internal_default_instance();
}


void ProtoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:guosen.ProtoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_ = 0;
  _internal_metadata_.Clear();
}

bool ProtoMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:guosen.ProtoMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .guosen.MsgType head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_head(static_cast< ::guosen::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:guosen.ProtoMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:guosen.ProtoMsg)
  return false;
#undef DO_
}

void ProtoMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:guosen.ProtoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .guosen.MsgType head = 1;
  if (this->head() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->head(), output);
  }

  // bytes body = 2;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:guosen.ProtoMsg)
}

::google::protobuf::uint8* ProtoMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:guosen.ProtoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .guosen.MsgType head = 1;
  if (this->head() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->head(), target);
  }

  // bytes body = 2;
  if (this->body().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->body(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:guosen.ProtoMsg)
  return target;
}

size_t ProtoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:guosen.ProtoMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes body = 2;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->body());
  }

  // .guosen.MsgType head = 1;
  if (this->head() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->head());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:guosen.ProtoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:guosen.ProtoMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:guosen.ProtoMsg)
    MergeFrom(*source);
  }
}

void ProtoMsg::MergeFrom(const ProtoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:guosen.ProtoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.head() != 0) {
    set_head(from.head());
  }
}

void ProtoMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:guosen.ProtoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoMsg::CopyFrom(const ProtoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:guosen.ProtoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoMsg::IsInitialized() const {
  return true;
}

void ProtoMsg::Swap(ProtoMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoMsg::InternalSwap(ProtoMsg* other) {
  using std::swap;
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(head_, other->head_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoMsg::GetMetadata() const {
  protobuf_ctp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ctp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CtpRtnConnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpRtnConnect::kStatusFieldNumber;
const int CtpRtnConnect::kNreasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpRtnConnect::CtpRtnConnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ctp_2eproto::scc_info_CtpRtnConnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:guosen.CtpRtnConnect)
}
CtpRtnConnect::CtpRtnConnect(const CtpRtnConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&nreason_) -
    reinterpret_cast<char*>(&status_)) + sizeof(nreason_));
  // @@protoc_insertion_point(copy_constructor:guosen.CtpRtnConnect)
}

void CtpRtnConnect::SharedCtor() {
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nreason_) -
      reinterpret_cast<char*>(&status_)) + sizeof(nreason_));
}

CtpRtnConnect::~CtpRtnConnect() {
  // @@protoc_insertion_point(destructor:guosen.CtpRtnConnect)
  SharedDtor();
}

void CtpRtnConnect::SharedDtor() {
}

void CtpRtnConnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CtpRtnConnect::descriptor() {
  ::protobuf_ctp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ctp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CtpRtnConnect& CtpRtnConnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ctp_2eproto::scc_info_CtpRtnConnect.base);
  return *internal_default_instance();
}


void CtpRtnConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:guosen.CtpRtnConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nreason_) -
      reinterpret_cast<char*>(&status_)) + sizeof(nreason_));
  _internal_metadata_.Clear();
}

bool CtpRtnConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:guosen.CtpRtnConnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nreason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nreason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:guosen.CtpRtnConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:guosen.CtpRtnConnect)
  return false;
#undef DO_
}

void CtpRtnConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:guosen.CtpRtnConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status(), output);
  }

  // int32 nreason = 2;
  if (this->nreason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nreason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:guosen.CtpRtnConnect)
}

::google::protobuf::uint8* CtpRtnConnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:guosen.CtpRtnConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status(), target);
  }

  // int32 nreason = 2;
  if (this->nreason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nreason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:guosen.CtpRtnConnect)
  return target;
}

size_t CtpRtnConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:guosen.CtpRtnConnect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  // int32 nreason = 2;
  if (this->nreason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nreason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpRtnConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:guosen.CtpRtnConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpRtnConnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CtpRtnConnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:guosen.CtpRtnConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:guosen.CtpRtnConnect)
    MergeFrom(*source);
  }
}

void CtpRtnConnect::MergeFrom(const CtpRtnConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:guosen.CtpRtnConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.nreason() != 0) {
    set_nreason(from.nreason());
  }
}

void CtpRtnConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:guosen.CtpRtnConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpRtnConnect::CopyFrom(const CtpRtnConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:guosen.CtpRtnConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpRtnConnect::IsInitialized() const {
  return true;
}

void CtpRtnConnect::Swap(CtpRtnConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpRtnConnect::InternalSwap(CtpRtnConnect* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(nreason_, other->nreason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CtpRtnConnect::GetMetadata() const {
  protobuf_ctp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ctp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CtpRspLogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpRspLogin::kTradingdayFieldNumber;
const int CtpRspLogin::kLogintimeFieldNumber;
const int CtpRspLogin::kBrokeridFieldNumber;
const int CtpRspLogin::kUseridFieldNumber;
const int CtpRspLogin::kSystemnameFieldNumber;
const int CtpRspLogin::kFrontidFieldNumber;
const int CtpRspLogin::kSessionidFieldNumber;
const int CtpRspLogin::kMaxorderrefFieldNumber;
const int CtpRspLogin::kShfetimeFieldNumber;
const int CtpRspLogin::kDcetimeFieldNumber;
const int CtpRspLogin::kCzcetimeFieldNumber;
const int CtpRspLogin::kFfextimeFieldNumber;
const int CtpRspLogin::kInetimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpRspLogin::CtpRspLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ctp_2eproto::scc_info_CtpRspLogin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:guosen.CtpRspLogin)
}
CtpRspLogin::CtpRspLogin(const CtpRspLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tradingday().size() > 0) {
    tradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingday_);
  }
  logintime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logintime().size() > 0) {
    logintime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logintime_);
  }
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brokerid().size() > 0) {
    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  systemname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.systemname().size() > 0) {
    systemname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.systemname_);
  }
  maxorderref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.maxorderref().size() > 0) {
    maxorderref_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.maxorderref_);
  }
  shfetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shfetime().size() > 0) {
    shfetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shfetime_);
  }
  dcetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dcetime().size() > 0) {
    dcetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dcetime_);
  }
  czcetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.czcetime().size() > 0) {
    czcetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.czcetime_);
  }
  ffextime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ffextime().size() > 0) {
    ffextime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ffextime_);
  }
  inetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.inetime().size() > 0) {
    inetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inetime_);
  }
  ::memcpy(&frontid_, &from.frontid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sessionid_) -
    reinterpret_cast<char*>(&frontid_)) + sizeof(sessionid_));
  // @@protoc_insertion_point(copy_constructor:guosen.CtpRspLogin)
}

void CtpRspLogin::SharedCtor() {
  tradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logintime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systemname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maxorderref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shfetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dcetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  czcetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ffextime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frontid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&frontid_)) + sizeof(sessionid_));
}

CtpRspLogin::~CtpRspLogin() {
  // @@protoc_insertion_point(destructor:guosen.CtpRspLogin)
  SharedDtor();
}

void CtpRspLogin::SharedDtor() {
  tradingday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logintime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systemname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maxorderref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shfetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dcetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  czcetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ffextime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpRspLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CtpRspLogin::descriptor() {
  ::protobuf_ctp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ctp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CtpRspLogin& CtpRspLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ctp_2eproto::scc_info_CtpRspLogin.base);
  return *internal_default_instance();
}


void CtpRspLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:guosen.CtpRspLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tradingday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systemname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maxorderref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shfetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dcetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  czcetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ffextime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frontid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&frontid_)) + sizeof(sessionid_));
  _internal_metadata_.Clear();
}

bool CtpRspLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:guosen.CtpRspLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tradingday = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradingday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradingday().data(), static_cast<int>(this->tradingday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRspLogin.tradingday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logintime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logintime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logintime().data(), static_cast<int>(this->logintime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRspLogin.logintime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string brokerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brokerid().data(), static_cast<int>(this->brokerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRspLogin.brokerid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRspLogin.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string systemname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_systemname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->systemname().data(), static_cast<int>(this->systemname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRspLogin.systemname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 frontid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frontid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sessionid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string maxorderref = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_maxorderref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->maxorderref().data(), static_cast<int>(this->maxorderref().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRspLogin.maxorderref"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shfetime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shfetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shfetime().data(), static_cast<int>(this->shfetime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRspLogin.shfetime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dcetime = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dcetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dcetime().data(), static_cast<int>(this->dcetime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRspLogin.dcetime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string czcetime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_czcetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->czcetime().data(), static_cast<int>(this->czcetime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRspLogin.czcetime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ffextime = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ffextime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ffextime().data(), static_cast<int>(this->ffextime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRspLogin.ffextime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string inetime = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inetime().data(), static_cast<int>(this->inetime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRspLogin.inetime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:guosen.CtpRspLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:guosen.CtpRspLogin)
  return false;
#undef DO_
}

void CtpRspLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:guosen.CtpRspLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tradingday = 1;
  if (this->tradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingday().data(), static_cast<int>(this->tradingday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.tradingday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tradingday(), output);
  }

  // string logintime = 2;
  if (this->logintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logintime().data(), static_cast<int>(this->logintime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.logintime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->logintime(), output);
  }

  // string brokerid = 3;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), static_cast<int>(this->brokerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.brokerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->brokerid(), output);
  }

  // string userid = 4;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->userid(), output);
  }

  // string systemname = 5;
  if (this->systemname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->systemname().data(), static_cast<int>(this->systemname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.systemname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->systemname(), output);
  }

  // int32 frontid = 6;
  if (this->frontid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->frontid(), output);
  }

  // int32 sessionid = 7;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->sessionid(), output);
  }

  // string maxorderref = 8;
  if (this->maxorderref().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->maxorderref().data(), static_cast<int>(this->maxorderref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.maxorderref");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->maxorderref(), output);
  }

  // string shfetime = 9;
  if (this->shfetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shfetime().data(), static_cast<int>(this->shfetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.shfetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->shfetime(), output);
  }

  // string dcetime = 10;
  if (this->dcetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dcetime().data(), static_cast<int>(this->dcetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.dcetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->dcetime(), output);
  }

  // string czcetime = 11;
  if (this->czcetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->czcetime().data(), static_cast<int>(this->czcetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.czcetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->czcetime(), output);
  }

  // string ffextime = 12;
  if (this->ffextime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ffextime().data(), static_cast<int>(this->ffextime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.ffextime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->ffextime(), output);
  }

  // string inetime = 13;
  if (this->inetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inetime().data(), static_cast<int>(this->inetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.inetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->inetime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:guosen.CtpRspLogin)
}

::google::protobuf::uint8* CtpRspLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:guosen.CtpRspLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tradingday = 1;
  if (this->tradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingday().data(), static_cast<int>(this->tradingday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.tradingday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tradingday(), target);
  }

  // string logintime = 2;
  if (this->logintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logintime().data(), static_cast<int>(this->logintime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.logintime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->logintime(), target);
  }

  // string brokerid = 3;
  if (this->brokerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brokerid().data(), static_cast<int>(this->brokerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.brokerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->brokerid(), target);
  }

  // string userid = 4;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->userid(), target);
  }

  // string systemname = 5;
  if (this->systemname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->systemname().data(), static_cast<int>(this->systemname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.systemname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->systemname(), target);
  }

  // int32 frontid = 6;
  if (this->frontid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->frontid(), target);
  }

  // int32 sessionid = 7;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->sessionid(), target);
  }

  // string maxorderref = 8;
  if (this->maxorderref().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->maxorderref().data(), static_cast<int>(this->maxorderref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.maxorderref");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->maxorderref(), target);
  }

  // string shfetime = 9;
  if (this->shfetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shfetime().data(), static_cast<int>(this->shfetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.shfetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->shfetime(), target);
  }

  // string dcetime = 10;
  if (this->dcetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dcetime().data(), static_cast<int>(this->dcetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.dcetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->dcetime(), target);
  }

  // string czcetime = 11;
  if (this->czcetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->czcetime().data(), static_cast<int>(this->czcetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.czcetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->czcetime(), target);
  }

  // string ffextime = 12;
  if (this->ffextime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ffextime().data(), static_cast<int>(this->ffextime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.ffextime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->ffextime(), target);
  }

  // string inetime = 13;
  if (this->inetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inetime().data(), static_cast<int>(this->inetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRspLogin.inetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->inetime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:guosen.CtpRspLogin)
  return target;
}

size_t CtpRspLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:guosen.CtpRspLogin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tradingday = 1;
  if (this->tradingday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradingday());
  }

  // string logintime = 2;
  if (this->logintime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logintime());
  }

  // string brokerid = 3;
  if (this->brokerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brokerid());
  }

  // string userid = 4;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string systemname = 5;
  if (this->systemname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->systemname());
  }

  // string maxorderref = 8;
  if (this->maxorderref().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->maxorderref());
  }

  // string shfetime = 9;
  if (this->shfetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shfetime());
  }

  // string dcetime = 10;
  if (this->dcetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dcetime());
  }

  // string czcetime = 11;
  if (this->czcetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->czcetime());
  }

  // string ffextime = 12;
  if (this->ffextime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ffextime());
  }

  // string inetime = 13;
  if (this->inetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inetime());
  }

  // int32 frontid = 6;
  if (this->frontid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frontid());
  }

  // int32 sessionid = 7;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpRspLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:guosen.CtpRspLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpRspLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CtpRspLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:guosen.CtpRspLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:guosen.CtpRspLogin)
    MergeFrom(*source);
  }
}

void CtpRspLogin::MergeFrom(const CtpRspLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:guosen.CtpRspLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tradingday().size() > 0) {

    tradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingday_);
  }
  if (from.logintime().size() > 0) {

    logintime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logintime_);
  }
  if (from.brokerid().size() > 0) {

    brokerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brokerid_);
  }
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.systemname().size() > 0) {

    systemname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.systemname_);
  }
  if (from.maxorderref().size() > 0) {

    maxorderref_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.maxorderref_);
  }
  if (from.shfetime().size() > 0) {

    shfetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shfetime_);
  }
  if (from.dcetime().size() > 0) {

    dcetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dcetime_);
  }
  if (from.czcetime().size() > 0) {

    czcetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.czcetime_);
  }
  if (from.ffextime().size() > 0) {

    ffextime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ffextime_);
  }
  if (from.inetime().size() > 0) {

    inetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inetime_);
  }
  if (from.frontid() != 0) {
    set_frontid(from.frontid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void CtpRspLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:guosen.CtpRspLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpRspLogin::CopyFrom(const CtpRspLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:guosen.CtpRspLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpRspLogin::IsInitialized() const {
  return true;
}

void CtpRspLogin::Swap(CtpRspLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpRspLogin::InternalSwap(CtpRspLogin* other) {
  using std::swap;
  tradingday_.Swap(&other->tradingday_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logintime_.Swap(&other->logintime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  brokerid_.Swap(&other->brokerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  systemname_.Swap(&other->systemname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  maxorderref_.Swap(&other->maxorderref_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shfetime_.Swap(&other->shfetime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dcetime_.Swap(&other->dcetime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  czcetime_.Swap(&other->czcetime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ffextime_.Swap(&other->ffextime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  inetime_.Swap(&other->inetime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(frontid_, other->frontid_);
  swap(sessionid_, other->sessionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CtpRspLogin::GetMetadata() const {
  protobuf_ctp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ctp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CtpRtnTick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtpRtnTick::kTradingdayFieldNumber;
const int CtpRtnTick::kInstrumentidFieldNumber;
const int CtpRtnTick::kExchangeidFieldNumber;
const int CtpRtnTick::kExchangeinstidFieldNumber;
const int CtpRtnTick::kLastpriceFieldNumber;
const int CtpRtnTick::kPresettlementpriceFieldNumber;
const int CtpRtnTick::kPreclosepriceFieldNumber;
const int CtpRtnTick::kPreopeninterestFieldNumber;
const int CtpRtnTick::kOpenpriceFieldNumber;
const int CtpRtnTick::kHighestpriceFieldNumber;
const int CtpRtnTick::kLowestpriceFieldNumber;
const int CtpRtnTick::kVolumeFieldNumber;
const int CtpRtnTick::kTurnoverFieldNumber;
const int CtpRtnTick::kOpeninterestFieldNumber;
const int CtpRtnTick::kClosepriceFieldNumber;
const int CtpRtnTick::kSettlementpriceFieldNumber;
const int CtpRtnTick::kUpperlimitpriceFieldNumber;
const int CtpRtnTick::kLowerlimitpriceFieldNumber;
const int CtpRtnTick::kPredeltaFieldNumber;
const int CtpRtnTick::kCurrdeltaFieldNumber;
const int CtpRtnTick::kUpdatetimeFieldNumber;
const int CtpRtnTick::kUpdatemillisecFieldNumber;
const int CtpRtnTick::kBidprice1FieldNumber;
const int CtpRtnTick::kBidvolume1FieldNumber;
const int CtpRtnTick::kAskprice1FieldNumber;
const int CtpRtnTick::kAskvolume1FieldNumber;
const int CtpRtnTick::kBidprice2FieldNumber;
const int CtpRtnTick::kBidvolume2FieldNumber;
const int CtpRtnTick::kAskprice2FieldNumber;
const int CtpRtnTick::kAskvolume2FieldNumber;
const int CtpRtnTick::kBidprice3FieldNumber;
const int CtpRtnTick::kBidvolume3FieldNumber;
const int CtpRtnTick::kAskprice3FieldNumber;
const int CtpRtnTick::kAskvolume3FieldNumber;
const int CtpRtnTick::kBidprice4FieldNumber;
const int CtpRtnTick::kBidvolume4FieldNumber;
const int CtpRtnTick::kAskprice4FieldNumber;
const int CtpRtnTick::kAskvolume4FieldNumber;
const int CtpRtnTick::kBidprice5FieldNumber;
const int CtpRtnTick::kBidvolume5FieldNumber;
const int CtpRtnTick::kAskprice5FieldNumber;
const int CtpRtnTick::kAskvolume5FieldNumber;
const int CtpRtnTick::kAveragepriceFieldNumber;
const int CtpRtnTick::kActiondayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtpRtnTick::CtpRtnTick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ctp_2eproto::scc_info_CtpRtnTick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:guosen.CtpRtnTick)
}
CtpRtnTick::CtpRtnTick(const CtpRtnTick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tradingday().size() > 0) {
    tradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingday_);
  }
  instrumentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrumentid().size() > 0) {
    instrumentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrumentid_);
  }
  exchangeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchangeid().size() > 0) {
    exchangeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangeid_);
  }
  exchangeinstid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchangeinstid().size() > 0) {
    exchangeinstid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangeinstid_);
  }
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.updatetime().size() > 0) {
    updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
  }
  actionday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.actionday().size() > 0) {
    actionday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actionday_);
  }
  ::memcpy(&lastprice_, &from.lastprice_,
    static_cast<size_t>(reinterpret_cast<char*>(&averageprice_) -
    reinterpret_cast<char*>(&lastprice_)) + sizeof(averageprice_));
  // @@protoc_insertion_point(copy_constructor:guosen.CtpRtnTick)
}

void CtpRtnTick::SharedCtor() {
  tradingday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrumentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangeinstid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actionday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lastprice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&averageprice_) -
      reinterpret_cast<char*>(&lastprice_)) + sizeof(averageprice_));
}

CtpRtnTick::~CtpRtnTick() {
  // @@protoc_insertion_point(destructor:guosen.CtpRtnTick)
  SharedDtor();
}

void CtpRtnTick::SharedDtor() {
  tradingday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrumentid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangeid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangeinstid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actionday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CtpRtnTick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CtpRtnTick::descriptor() {
  ::protobuf_ctp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ctp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CtpRtnTick& CtpRtnTick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ctp_2eproto::scc_info_CtpRtnTick.base);
  return *internal_default_instance();
}


void CtpRtnTick::Clear() {
// @@protoc_insertion_point(message_clear_start:guosen.CtpRtnTick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tradingday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrumentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exchangeinstid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actionday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lastprice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&averageprice_) -
      reinterpret_cast<char*>(&lastprice_)) + sizeof(averageprice_));
  _internal_metadata_.Clear();
}

bool CtpRtnTick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:guosen.CtpRtnTick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tradingday = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradingday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tradingday().data(), static_cast<int>(this->tradingday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRtnTick.tradingday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instrumentid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrumentid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrumentid().data(), static_cast<int>(this->instrumentid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRtnTick.instrumentid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchangeid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchangeid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchangeid().data(), static_cast<int>(this->exchangeid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRtnTick.exchangeid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exchangeinstid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchangeinstid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchangeinstid().data(), static_cast<int>(this->exchangeinstid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRtnTick.exchangeinstid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lastprice = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lastprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double presettlementprice = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &presettlementprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double precloseprice = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &precloseprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double preopeninterest = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &preopeninterest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double openprice = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double highestprice = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &highestprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lowestprice = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowestprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 volume = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double turnover = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double openinterest = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openinterest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double closeprice = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &closeprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double settlementprice = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &settlementprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double upperlimitprice = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &upperlimitprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lowerlimitprice = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowerlimitprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double predelta = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &predelta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double currdelta = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &currdelta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string updatetime = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->updatetime().data(), static_cast<int>(this->updatetime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRtnTick.updatetime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 updatemillisec = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updatemillisec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bidprice1 = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bidvolume1 = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidvolume1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double askprice1 = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 askvolume1 = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askvolume1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bidprice2 = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(217u /* 217 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bidvolume2 = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidvolume2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double askprice2 = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(233u /* 233 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 askvolume2 = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askvolume2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bidprice3 = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(249u /* 249 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bidvolume3 = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidvolume3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double askprice3 = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 265 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 askvolume3 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askvolume3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bidprice4 = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 281 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bidvolume4 = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidvolume4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double askprice4 = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 297 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 askvolume4 = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askvolume4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bidprice5 = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 313 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bidprice5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bidvolume5 = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidvolume5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double askprice5 = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 329 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &askprice5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 askvolume5 = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &askvolume5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double averageprice = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 345 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &averageprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string actionday = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actionday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actionday().data(), static_cast<int>(this->actionday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "guosen.CtpRtnTick.actionday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:guosen.CtpRtnTick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:guosen.CtpRtnTick)
  return false;
#undef DO_
}

void CtpRtnTick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:guosen.CtpRtnTick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tradingday = 1;
  if (this->tradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingday().data(), static_cast<int>(this->tradingday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRtnTick.tradingday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tradingday(), output);
  }

  // string instrumentid = 2;
  if (this->instrumentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrumentid().data(), static_cast<int>(this->instrumentid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRtnTick.instrumentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instrumentid(), output);
  }

  // string exchangeid = 3;
  if (this->exchangeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangeid().data(), static_cast<int>(this->exchangeid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRtnTick.exchangeid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->exchangeid(), output);
  }

  // string exchangeinstid = 4;
  if (this->exchangeinstid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangeinstid().data(), static_cast<int>(this->exchangeinstid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRtnTick.exchangeinstid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exchangeinstid(), output);
  }

  // double lastprice = 5;
  if (this->lastprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->lastprice(), output);
  }

  // double presettlementprice = 6;
  if (this->presettlementprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->presettlementprice(), output);
  }

  // double precloseprice = 7;
  if (this->precloseprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->precloseprice(), output);
  }

  // double preopeninterest = 8;
  if (this->preopeninterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->preopeninterest(), output);
  }

  // double openprice = 9;
  if (this->openprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->openprice(), output);
  }

  // double highestprice = 10;
  if (this->highestprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->highestprice(), output);
  }

  // double lowestprice = 11;
  if (this->lowestprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->lowestprice(), output);
  }

  // int32 volume = 12;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->volume(), output);
  }

  // double turnover = 13;
  if (this->turnover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->turnover(), output);
  }

  // double openinterest = 14;
  if (this->openinterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->openinterest(), output);
  }

  // double closeprice = 15;
  if (this->closeprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->closeprice(), output);
  }

  // double settlementprice = 16;
  if (this->settlementprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->settlementprice(), output);
  }

  // double upperlimitprice = 17;
  if (this->upperlimitprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->upperlimitprice(), output);
  }

  // double lowerlimitprice = 18;
  if (this->lowerlimitprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->lowerlimitprice(), output);
  }

  // double predelta = 19;
  if (this->predelta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->predelta(), output);
  }

  // double currdelta = 20;
  if (this->currdelta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->currdelta(), output);
  }

  // string updatetime = 21;
  if (this->updatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatetime().data(), static_cast<int>(this->updatetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRtnTick.updatetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->updatetime(), output);
  }

  // int32 updatemillisec = 22;
  if (this->updatemillisec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->updatemillisec(), output);
  }

  // double bidprice1 = 23;
  if (this->bidprice1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->bidprice1(), output);
  }

  // int32 bidvolume1 = 24;
  if (this->bidvolume1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->bidvolume1(), output);
  }

  // double askprice1 = 25;
  if (this->askprice1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->askprice1(), output);
  }

  // int32 askvolume1 = 26;
  if (this->askvolume1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->askvolume1(), output);
  }

  // double bidprice2 = 27;
  if (this->bidprice2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(27, this->bidprice2(), output);
  }

  // int32 bidvolume2 = 28;
  if (this->bidvolume2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->bidvolume2(), output);
  }

  // double askprice2 = 29;
  if (this->askprice2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(29, this->askprice2(), output);
  }

  // int32 askvolume2 = 30;
  if (this->askvolume2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->askvolume2(), output);
  }

  // double bidprice3 = 31;
  if (this->bidprice3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->bidprice3(), output);
  }

  // int32 bidvolume3 = 32;
  if (this->bidvolume3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->bidvolume3(), output);
  }

  // double askprice3 = 33;
  if (this->askprice3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(33, this->askprice3(), output);
  }

  // int32 askvolume3 = 34;
  if (this->askvolume3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->askvolume3(), output);
  }

  // double bidprice4 = 35;
  if (this->bidprice4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(35, this->bidprice4(), output);
  }

  // int32 bidvolume4 = 36;
  if (this->bidvolume4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->bidvolume4(), output);
  }

  // double askprice4 = 37;
  if (this->askprice4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(37, this->askprice4(), output);
  }

  // int32 askvolume4 = 38;
  if (this->askvolume4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->askvolume4(), output);
  }

  // double bidprice5 = 39;
  if (this->bidprice5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(39, this->bidprice5(), output);
  }

  // int32 bidvolume5 = 40;
  if (this->bidvolume5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->bidvolume5(), output);
  }

  // double askprice5 = 41;
  if (this->askprice5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(41, this->askprice5(), output);
  }

  // int32 askvolume5 = 42;
  if (this->askvolume5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->askvolume5(), output);
  }

  // double averageprice = 43;
  if (this->averageprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(43, this->averageprice(), output);
  }

  // string actionday = 44;
  if (this->actionday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actionday().data(), static_cast<int>(this->actionday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRtnTick.actionday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      44, this->actionday(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:guosen.CtpRtnTick)
}

::google::protobuf::uint8* CtpRtnTick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:guosen.CtpRtnTick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tradingday = 1;
  if (this->tradingday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tradingday().data(), static_cast<int>(this->tradingday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRtnTick.tradingday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tradingday(), target);
  }

  // string instrumentid = 2;
  if (this->instrumentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrumentid().data(), static_cast<int>(this->instrumentid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRtnTick.instrumentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instrumentid(), target);
  }

  // string exchangeid = 3;
  if (this->exchangeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangeid().data(), static_cast<int>(this->exchangeid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRtnTick.exchangeid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->exchangeid(), target);
  }

  // string exchangeinstid = 4;
  if (this->exchangeinstid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchangeinstid().data(), static_cast<int>(this->exchangeinstid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRtnTick.exchangeinstid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exchangeinstid(), target);
  }

  // double lastprice = 5;
  if (this->lastprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->lastprice(), target);
  }

  // double presettlementprice = 6;
  if (this->presettlementprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->presettlementprice(), target);
  }

  // double precloseprice = 7;
  if (this->precloseprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->precloseprice(), target);
  }

  // double preopeninterest = 8;
  if (this->preopeninterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->preopeninterest(), target);
  }

  // double openprice = 9;
  if (this->openprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->openprice(), target);
  }

  // double highestprice = 10;
  if (this->highestprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->highestprice(), target);
  }

  // double lowestprice = 11;
  if (this->lowestprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->lowestprice(), target);
  }

  // int32 volume = 12;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->volume(), target);
  }

  // double turnover = 13;
  if (this->turnover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->turnover(), target);
  }

  // double openinterest = 14;
  if (this->openinterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->openinterest(), target);
  }

  // double closeprice = 15;
  if (this->closeprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->closeprice(), target);
  }

  // double settlementprice = 16;
  if (this->settlementprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->settlementprice(), target);
  }

  // double upperlimitprice = 17;
  if (this->upperlimitprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->upperlimitprice(), target);
  }

  // double lowerlimitprice = 18;
  if (this->lowerlimitprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->lowerlimitprice(), target);
  }

  // double predelta = 19;
  if (this->predelta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->predelta(), target);
  }

  // double currdelta = 20;
  if (this->currdelta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->currdelta(), target);
  }

  // string updatetime = 21;
  if (this->updatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatetime().data(), static_cast<int>(this->updatetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRtnTick.updatetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->updatetime(), target);
  }

  // int32 updatemillisec = 22;
  if (this->updatemillisec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->updatemillisec(), target);
  }

  // double bidprice1 = 23;
  if (this->bidprice1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->bidprice1(), target);
  }

  // int32 bidvolume1 = 24;
  if (this->bidvolume1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->bidvolume1(), target);
  }

  // double askprice1 = 25;
  if (this->askprice1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(25, this->askprice1(), target);
  }

  // int32 askvolume1 = 26;
  if (this->askvolume1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->askvolume1(), target);
  }

  // double bidprice2 = 27;
  if (this->bidprice2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(27, this->bidprice2(), target);
  }

  // int32 bidvolume2 = 28;
  if (this->bidvolume2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->bidvolume2(), target);
  }

  // double askprice2 = 29;
  if (this->askprice2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(29, this->askprice2(), target);
  }

  // int32 askvolume2 = 30;
  if (this->askvolume2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->askvolume2(), target);
  }

  // double bidprice3 = 31;
  if (this->bidprice3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(31, this->bidprice3(), target);
  }

  // int32 bidvolume3 = 32;
  if (this->bidvolume3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->bidvolume3(), target);
  }

  // double askprice3 = 33;
  if (this->askprice3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(33, this->askprice3(), target);
  }

  // int32 askvolume3 = 34;
  if (this->askvolume3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->askvolume3(), target);
  }

  // double bidprice4 = 35;
  if (this->bidprice4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(35, this->bidprice4(), target);
  }

  // int32 bidvolume4 = 36;
  if (this->bidvolume4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(36, this->bidvolume4(), target);
  }

  // double askprice4 = 37;
  if (this->askprice4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(37, this->askprice4(), target);
  }

  // int32 askvolume4 = 38;
  if (this->askvolume4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->askvolume4(), target);
  }

  // double bidprice5 = 39;
  if (this->bidprice5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(39, this->bidprice5(), target);
  }

  // int32 bidvolume5 = 40;
  if (this->bidvolume5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->bidvolume5(), target);
  }

  // double askprice5 = 41;
  if (this->askprice5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(41, this->askprice5(), target);
  }

  // int32 askvolume5 = 42;
  if (this->askvolume5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->askvolume5(), target);
  }

  // double averageprice = 43;
  if (this->averageprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(43, this->averageprice(), target);
  }

  // string actionday = 44;
  if (this->actionday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actionday().data(), static_cast<int>(this->actionday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "guosen.CtpRtnTick.actionday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        44, this->actionday(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:guosen.CtpRtnTick)
  return target;
}

size_t CtpRtnTick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:guosen.CtpRtnTick)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tradingday = 1;
  if (this->tradingday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tradingday());
  }

  // string instrumentid = 2;
  if (this->instrumentid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrumentid());
  }

  // string exchangeid = 3;
  if (this->exchangeid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchangeid());
  }

  // string exchangeinstid = 4;
  if (this->exchangeinstid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchangeinstid());
  }

  // string updatetime = 21;
  if (this->updatetime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updatetime());
  }

  // string actionday = 44;
  if (this->actionday().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->actionday());
  }

  // double lastprice = 5;
  if (this->lastprice() != 0) {
    total_size += 1 + 8;
  }

  // double presettlementprice = 6;
  if (this->presettlementprice() != 0) {
    total_size += 1 + 8;
  }

  // double precloseprice = 7;
  if (this->precloseprice() != 0) {
    total_size += 1 + 8;
  }

  // double preopeninterest = 8;
  if (this->preopeninterest() != 0) {
    total_size += 1 + 8;
  }

  // double openprice = 9;
  if (this->openprice() != 0) {
    total_size += 1 + 8;
  }

  // double highestprice = 10;
  if (this->highestprice() != 0) {
    total_size += 1 + 8;
  }

  // double lowestprice = 11;
  if (this->lowestprice() != 0) {
    total_size += 1 + 8;
  }

  // double turnover = 13;
  if (this->turnover() != 0) {
    total_size += 1 + 8;
  }

  // double openinterest = 14;
  if (this->openinterest() != 0) {
    total_size += 1 + 8;
  }

  // double closeprice = 15;
  if (this->closeprice() != 0) {
    total_size += 1 + 8;
  }

  // double settlementprice = 16;
  if (this->settlementprice() != 0) {
    total_size += 2 + 8;
  }

  // double upperlimitprice = 17;
  if (this->upperlimitprice() != 0) {
    total_size += 2 + 8;
  }

  // int32 volume = 12;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // int32 updatemillisec = 22;
  if (this->updatemillisec() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->updatemillisec());
  }

  // double lowerlimitprice = 18;
  if (this->lowerlimitprice() != 0) {
    total_size += 2 + 8;
  }

  // double predelta = 19;
  if (this->predelta() != 0) {
    total_size += 2 + 8;
  }

  // double currdelta = 20;
  if (this->currdelta() != 0) {
    total_size += 2 + 8;
  }

  // double bidprice1 = 23;
  if (this->bidprice1() != 0) {
    total_size += 2 + 8;
  }

  // double askprice1 = 25;
  if (this->askprice1() != 0) {
    total_size += 2 + 8;
  }

  // int32 bidvolume1 = 24;
  if (this->bidvolume1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidvolume1());
  }

  // int32 askvolume1 = 26;
  if (this->askvolume1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->askvolume1());
  }

  // double bidprice2 = 27;
  if (this->bidprice2() != 0) {
    total_size += 2 + 8;
  }

  // double askprice2 = 29;
  if (this->askprice2() != 0) {
    total_size += 2 + 8;
  }

  // int32 bidvolume2 = 28;
  if (this->bidvolume2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidvolume2());
  }

  // int32 askvolume2 = 30;
  if (this->askvolume2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->askvolume2());
  }

  // double bidprice3 = 31;
  if (this->bidprice3() != 0) {
    total_size += 2 + 8;
  }

  // double askprice3 = 33;
  if (this->askprice3() != 0) {
    total_size += 2 + 8;
  }

  // int32 bidvolume3 = 32;
  if (this->bidvolume3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidvolume3());
  }

  // int32 askvolume3 = 34;
  if (this->askvolume3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->askvolume3());
  }

  // double bidprice4 = 35;
  if (this->bidprice4() != 0) {
    total_size += 2 + 8;
  }

  // double askprice4 = 37;
  if (this->askprice4() != 0) {
    total_size += 2 + 8;
  }

  // int32 bidvolume4 = 36;
  if (this->bidvolume4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidvolume4());
  }

  // int32 askvolume4 = 38;
  if (this->askvolume4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->askvolume4());
  }

  // double bidprice5 = 39;
  if (this->bidprice5() != 0) {
    total_size += 2 + 8;
  }

  // double askprice5 = 41;
  if (this->askprice5() != 0) {
    total_size += 2 + 8;
  }

  // int32 bidvolume5 = 40;
  if (this->bidvolume5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bidvolume5());
  }

  // int32 askvolume5 = 42;
  if (this->askvolume5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->askvolume5());
  }

  // double averageprice = 43;
  if (this->averageprice() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CtpRtnTick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:guosen.CtpRtnTick)
  GOOGLE_DCHECK_NE(&from, this);
  const CtpRtnTick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CtpRtnTick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:guosen.CtpRtnTick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:guosen.CtpRtnTick)
    MergeFrom(*source);
  }
}

void CtpRtnTick::MergeFrom(const CtpRtnTick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:guosen.CtpRtnTick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tradingday().size() > 0) {

    tradingday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tradingday_);
  }
  if (from.instrumentid().size() > 0) {

    instrumentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrumentid_);
  }
  if (from.exchangeid().size() > 0) {

    exchangeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangeid_);
  }
  if (from.exchangeinstid().size() > 0) {

    exchangeinstid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchangeinstid_);
  }
  if (from.updatetime().size() > 0) {

    updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
  }
  if (from.actionday().size() > 0) {

    actionday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actionday_);
  }
  if (from.lastprice() != 0) {
    set_lastprice(from.lastprice());
  }
  if (from.presettlementprice() != 0) {
    set_presettlementprice(from.presettlementprice());
  }
  if (from.precloseprice() != 0) {
    set_precloseprice(from.precloseprice());
  }
  if (from.preopeninterest() != 0) {
    set_preopeninterest(from.preopeninterest());
  }
  if (from.openprice() != 0) {
    set_openprice(from.openprice());
  }
  if (from.highestprice() != 0) {
    set_highestprice(from.highestprice());
  }
  if (from.lowestprice() != 0) {
    set_lowestprice(from.lowestprice());
  }
  if (from.turnover() != 0) {
    set_turnover(from.turnover());
  }
  if (from.openinterest() != 0) {
    set_openinterest(from.openinterest());
  }
  if (from.closeprice() != 0) {
    set_closeprice(from.closeprice());
  }
  if (from.settlementprice() != 0) {
    set_settlementprice(from.settlementprice());
  }
  if (from.upperlimitprice() != 0) {
    set_upperlimitprice(from.upperlimitprice());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.updatemillisec() != 0) {
    set_updatemillisec(from.updatemillisec());
  }
  if (from.lowerlimitprice() != 0) {
    set_lowerlimitprice(from.lowerlimitprice());
  }
  if (from.predelta() != 0) {
    set_predelta(from.predelta());
  }
  if (from.currdelta() != 0) {
    set_currdelta(from.currdelta());
  }
  if (from.bidprice1() != 0) {
    set_bidprice1(from.bidprice1());
  }
  if (from.askprice1() != 0) {
    set_askprice1(from.askprice1());
  }
  if (from.bidvolume1() != 0) {
    set_bidvolume1(from.bidvolume1());
  }
  if (from.askvolume1() != 0) {
    set_askvolume1(from.askvolume1());
  }
  if (from.bidprice2() != 0) {
    set_bidprice2(from.bidprice2());
  }
  if (from.askprice2() != 0) {
    set_askprice2(from.askprice2());
  }
  if (from.bidvolume2() != 0) {
    set_bidvolume2(from.bidvolume2());
  }
  if (from.askvolume2() != 0) {
    set_askvolume2(from.askvolume2());
  }
  if (from.bidprice3() != 0) {
    set_bidprice3(from.bidprice3());
  }
  if (from.askprice3() != 0) {
    set_askprice3(from.askprice3());
  }
  if (from.bidvolume3() != 0) {
    set_bidvolume3(from.bidvolume3());
  }
  if (from.askvolume3() != 0) {
    set_askvolume3(from.askvolume3());
  }
  if (from.bidprice4() != 0) {
    set_bidprice4(from.bidprice4());
  }
  if (from.askprice4() != 0) {
    set_askprice4(from.askprice4());
  }
  if (from.bidvolume4() != 0) {
    set_bidvolume4(from.bidvolume4());
  }
  if (from.askvolume4() != 0) {
    set_askvolume4(from.askvolume4());
  }
  if (from.bidprice5() != 0) {
    set_bidprice5(from.bidprice5());
  }
  if (from.askprice5() != 0) {
    set_askprice5(from.askprice5());
  }
  if (from.bidvolume5() != 0) {
    set_bidvolume5(from.bidvolume5());
  }
  if (from.askvolume5() != 0) {
    set_askvolume5(from.askvolume5());
  }
  if (from.averageprice() != 0) {
    set_averageprice(from.averageprice());
  }
}

void CtpRtnTick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:guosen.CtpRtnTick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtpRtnTick::CopyFrom(const CtpRtnTick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:guosen.CtpRtnTick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtpRtnTick::IsInitialized() const {
  return true;
}

void CtpRtnTick::Swap(CtpRtnTick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtpRtnTick::InternalSwap(CtpRtnTick* other) {
  using std::swap;
  tradingday_.Swap(&other->tradingday_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instrumentid_.Swap(&other->instrumentid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchangeid_.Swap(&other->exchangeid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchangeinstid_.Swap(&other->exchangeinstid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  updatetime_.Swap(&other->updatetime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  actionday_.Swap(&other->actionday_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(lastprice_, other->lastprice_);
  swap(presettlementprice_, other->presettlementprice_);
  swap(precloseprice_, other->precloseprice_);
  swap(preopeninterest_, other->preopeninterest_);
  swap(openprice_, other->openprice_);
  swap(highestprice_, other->highestprice_);
  swap(lowestprice_, other->lowestprice_);
  swap(turnover_, other->turnover_);
  swap(openinterest_, other->openinterest_);
  swap(closeprice_, other->closeprice_);
  swap(settlementprice_, other->settlementprice_);
  swap(upperlimitprice_, other->upperlimitprice_);
  swap(volume_, other->volume_);
  swap(updatemillisec_, other->updatemillisec_);
  swap(lowerlimitprice_, other->lowerlimitprice_);
  swap(predelta_, other->predelta_);
  swap(currdelta_, other->currdelta_);
  swap(bidprice1_, other->bidprice1_);
  swap(askprice1_, other->askprice1_);
  swap(bidvolume1_, other->bidvolume1_);
  swap(askvolume1_, other->askvolume1_);
  swap(bidprice2_, other->bidprice2_);
  swap(askprice2_, other->askprice2_);
  swap(bidvolume2_, other->bidvolume2_);
  swap(askvolume2_, other->askvolume2_);
  swap(bidprice3_, other->bidprice3_);
  swap(askprice3_, other->askprice3_);
  swap(bidvolume3_, other->bidvolume3_);
  swap(askvolume3_, other->askvolume3_);
  swap(bidprice4_, other->bidprice4_);
  swap(askprice4_, other->askprice4_);
  swap(bidvolume4_, other->bidvolume4_);
  swap(askvolume4_, other->askvolume4_);
  swap(bidprice5_, other->bidprice5_);
  swap(askprice5_, other->askprice5_);
  swap(bidvolume5_, other->bidvolume5_);
  swap(askvolume5_, other->askvolume5_);
  swap(averageprice_, other->averageprice_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CtpRtnTick::GetMetadata() const {
  protobuf_ctp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ctp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace guosen
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::guosen::ProtoMsg* Arena::CreateMaybeMessage< ::guosen::ProtoMsg >(Arena* arena) {
  return Arena::CreateInternal< ::guosen::ProtoMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::guosen::CtpRtnConnect* Arena::CreateMaybeMessage< ::guosen::CtpRtnConnect >(Arena* arena) {
  return Arena::CreateInternal< ::guosen::CtpRtnConnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::guosen::CtpRspLogin* Arena::CreateMaybeMessage< ::guosen::CtpRspLogin >(Arena* arena) {
  return Arena::CreateInternal< ::guosen::CtpRspLogin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::guosen::CtpRtnTick* Arena::CreateMaybeMessage< ::guosen::CtpRtnTick >(Arena* arena) {
  return Arena::CreateInternal< ::guosen::CtpRtnTick >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
